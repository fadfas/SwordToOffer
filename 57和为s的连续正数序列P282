#include<cstring>
#include<iostream>
#include<cstring>
#include<array>
#include<string>
#include<cstdio>
#include<stack>
#include<vector>
#include<deque>
#include<set>
#include<ctime>
#include<algorithm>
#include<functional>
//using std::cout;
//using std::endl;
//using std::array;
//using std::string;
//using std::vector;
//using std::deque;
//using std::less;
//using std::greater;

using namespace std;

vector<int> getVec(int small, int big) {
	vector<int> temp = {};

	for (int i = small; i <= big; ++i) {
		temp.push_back(i);
	}

	return temp;
}

vector<vector<int> > FindContinuousSequence(int sum) {
	vector<vector<int>> result = {};
	if (sum < 3) {
		return result;
	}

	int small = 1;
	int big = 2;
	int middle = (1 + sum) / 2;
	int currentSum = small + big;
	while (small<middle)
	{
		if (currentSum == sum) {
			result.push_back(getVec(small, big));
			currentSum -= small;
			++small;
			
			//++big;  以上两行代码，替换成注释掉的两行代码也可以
			//currentSum += big;
		}

		if (currentSum > sum) {
			currentSum -= small;
			++small;
		}

		if (currentSum < sum) {
			++big;
			currentSum += big;
		}
	}

	return result;
}

// ====================测试代码====================
void Test(const char* testName, int sum)
{
	if (testName != nullptr)
		printf("%s for %d begins: \n", testName, sum);

	FindContinuousSequence(sum);
}

int main(int argc, char* argv[])
{
	//Test("test1", 1);
	//Test("test2", 3);
	//Test("test3", 4);
	//Test("test4", 9);
	//Test("test5", 15);
	//Test("test6", 100);
	Test("test4", 9);
	return 0;
}
