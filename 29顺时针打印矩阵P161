
void PrintMatrixCircle(int** numbers, int columns, int rows, int start) {
	int endX = columns - start - 1;
	int endY = rows - start - 1;

	for (int i = start; i <= endX; ++i) {
		int number = numbers[start][i];
		cout << number << endl;
	}

	if (endY > start) {
		for (int i = start + 1; i <= endY; ++i) {
			int number = numbers[i][endX];
			cout << number << endl;
		}
	}


	if (endY > start&&endX > start) {
		for (int i = endX - 1; i >= start; --i) {
			int number = numbers[endY][i];
			cout << number << endl;
		}
	}

	if (endY - start >= 2 && endX > start) {
		for (int i = endY - 1; i > start; --i) {
			int number = numbers[i][start];
			cout << number << endl;
		}
	}
}

void PrintMatrixClockwisely(int** numbers, int columns, int rows) {
	if (numbers == nullptr || columns <= 0 || rows <= 0) {
		return;
	}

	int start = 0;
	while (columns>start*2&&rows>start*2)
	{
		PrintMatrixCircle(numbers, columns, rows, start);
		++start;
	}
}
