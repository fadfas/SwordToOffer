#include<cstring>
#include<iostream>
#include<cstring>
#include<array>
#include<string>
#include<cstdio>
#include<stack>
#include<vector>
#include<deque>
using std::cout;
using std::endl;
using std::array;
using std::string;
using std::vector;
using std::deque;

int getBeginNumber(int digits) {

	if (digits == 1) {
		return 0;
	}
	return (int) std::pow(10, digits - 1);
}

int digitAtIndex(int index, int digits) {
	int number = getBeginNumber(digits) + index / digits;

	int indexFromRight = digits - index % digits;

	for (int i = 1; i < indexFromRight; ++i) {
		number = number / 10;
	}

	return number % 10;
}


int countOfIntegers(int n) {
	if (n == 1) {
		return 10;
	}

	int count = std::pow(10, n - 1);

	return 9 * count;
}


int digitAtIndex(int index) {

	if (index < 0) {
		return -1;
	}
	int digits = 1;
	while (true) {
		int numbers = countOfIntegers(digits);

		if (numbers*digits > index) {
			return digitAtIndex(index, digits);
		}

		index -= digits * numbers;

		++digits;
	}
}


int main(int argc, char* argv[])
{
	
	cout << digitAtIndex(19) << endl;

}
