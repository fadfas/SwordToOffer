#include<cstring>
#include<iostream>
#include<cstring>
#include<array>
#include<string>
#include<cstdio>
#include<stack>
#include<vector>
#include<deque>
#include<set>
#include<ctime>
#include<algorithm>
#include<functional>
//using std::cout;
//using std::endl;
//using std::array;
//using std::string;
//using std::vector;
//using std::deque;
//using std::less;
//using std::greater;

using namespace std;

int longestSubstringWithoutDuplication(const string& str) {
	int currentLength = 0;
	int maxLength = 0;
	
	int* position = new int[26];

	for (int i = 0; i < 26; ++i) {
		position[i] = -1;
	}

	for (int i = 0; i < str.length(); ++i) {
		int prevIndex = position[str[i] - 'a'];
		if (prevIndex<0||(i - prevIndex )> currentLength) {
			currentLength++;
		}
		else
		{
			if (currentLength > maxLength) {
				maxLength = currentLength;
			}

			currentLength = i - prevIndex;
		}
		position[str[i] - 'a'] = i;

	}

	if (currentLength > maxLength) {
		maxLength = currentLength;
	}

	delete[] position;
	return maxLength;
}

// ====================测试代码====================
void testSolution1(const std::string& input, int expected)
{
	int output = longestSubstringWithoutDuplication(input);
	if (output == expected)
		std::cout << "Solution 1 passed, with input: " << input << std::endl;
	else
		std::cout << "Solution 1 FAILED, with input: " << input << std::endl;
}


void test(const std::string& input, int expected)
{
	testSolution1(input, expected);
}

void test1()
{
	const std::string input = "abcacfrar";
	int expected = 4;
	test(input, expected);
}

void test2()
{
	const std::string input = "acfrarabc";
	int expected = 4;
	test(input, expected);
}

void test3()
{
	const std::string input = "arabcacfr";
	int expected = 4;
	test(input, expected);
}

void test4()
{
	const std::string input = "aaaa";
	int expected = 1;
	test(input, expected);
}

void test5()
{
	const std::string input = "abcdefg";
	int expected = 7;
	test(input, expected);
}

void test6()
{
	const std::string input = "aaabbbccc";
	int expected = 2;
	test(input, expected);
}

void test7()
{
	const std::string input = "abcdcba";
	int expected = 4;
	test(input, expected);
}

void test8()
{
	const std::string input = "abcdaef";
	int expected = 6;
	test(input, expected);
}

void test9()
{
	const std::string input = "a";
	int expected = 1;
	test(input, expected);
}

void test10()
{
	const std::string input = "";
	int expected = 0;
	test(input, expected);
}

int main(int argc, char* argv[])
{
	test1();
	test2();
	test3();
	test4();
	test5();
	test6();
	test7();
	test8();
	test9();
	test10();

	return 0;
}
